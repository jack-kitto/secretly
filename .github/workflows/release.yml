# name: Release
#
# on:
#   push:
#     tags:
#       - 'cli/v*'
#       - 'api/v*'
#
# jobs:
#   release:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
#       - uses: actions/setup-go@v3
#         with:
#           go-version: '>=1.20.0'
#       - name: Run GoReleaser for CLI
#         if: startsWith(github.ref, 'refs/tags/cli/')
#         uses: goreleaser/goreleaser-action@v4
#         with:
#           distribution: goreleaser
#           version: latest
#           args: release --clean
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - name: Run GoReleaser for API
#         if: startsWith(github.ref, 'refs/tags/api/')
#         uses: goreleaser/goreleaser-action@v4
#         with:
#           distribution: goreleaser
#           version: latest
#           args: release --clean -f .goreleaser.api.yml
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Release
on:
  push:
    branches:
      - 'main'
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.23
      - uses: golangci/golangci-lint-action@v3
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.23
      - run: go test -v ./...
  release:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.23
      - uses: go-semantic-release/action@v1
        with:
          hooks: goreleaser
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
